{"version":3,"sources":["components/ComicCard/index.js","components/Wrapper/index.js","components/Score/index.js","components/Title/index.js","App.js","index.js"],"names":["ComicCard","props","react_default","a","createElement","onClick","handleGuess","id","className","alt","name","src","image","Wrapper","children","Score","currentscore","highscore","Title","App","state","comics","guessedCards","gameOver","updateScore","tempHighScore","_this","tempScore","setState","console","log","randomize","tempArray","includes","push","randomIndex","oldArray","newArray","length","Math","floor","random","splice","concat","_this2","this","components_Title","components_Score","components_Wrapper","map","comic","components_ComicCard","key","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.1be6c187.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\n\nfunction ComicCard(props) {\n  return (\n    <div onClick={() => props.handleGuess(props.id)} className=\"card\">\n      <div className=\"img-container\">\n        <img alt={props.name} src={props.image} />\n      </div>\n      <div className=\"content\">\n        <ul>\n          <li>\n            <strong>{props.name}</strong>\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default ComicCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Score(props){\n  return(\n    <div className={props.className + \" score\"} >\n      <h3 className=\"score\">{props.children}</h3>\n      <div className=\"score-small\">Your Score: {props.currentscore} </div>\n      <div className=\"score-small\">High Score: {props.highscore}</div>\n      <hr></hr>\n    </div>\n  );\n}\n\nexport default Score;\n\n\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Title(props) {\n  return <h1 className=\"title\">{props.children}</h1>;\n}\n\nexport default Title;\n","import React, { Component } from \"react\";\nimport ComicCard from \"./components/ComicCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Score from \"./components/Score/index.js\";\nimport Title from \"./components/Title\";\nimport comics from \"./comics.json\";\n\nclass App extends Component {\n  // Setting this.state.comics to the comics json array\n  state = {\n    comics,\n    highscore: 0,\n    currentscore: 0,\n    guessedCards: [],\n    gameOver: false\n  };\n\n  updateScore = () => {\n    let tempHighScore = this.state.highscore;\n    let tempScore = this.state.currentscore+1;\n    if (tempScore >= tempHighScore){\n      tempHighScore = tempScore\n      this.setState({\n        highscore: tempHighScore,\n        currentscore: tempScore\n      });\n  } else {\n    this.setState({\n      currentscore: tempScore\n    })\n  } \n}\n\n  gameOver = () => {\n    console.log(\"you've already guessed that one\");\n    this.setState({\n      gameOver: true,\n      currentscore: 0,\n      guessedCards: []\n    })\n  };\n\n  handleGuess = (id) => {\n    this.randomize();\n    if (this.state.gameOver === true){\n      this.setState({\n        gameOver: false\n      })\n    }\n    \n    let tempArray = this.state.guessedCards\n    if (tempArray.includes(id)){\n      this.gameOver();\n    } else {\n      this.updateScore();\n      tempArray.push(id);\n      this.setState({\n        guessedCards: tempArray\n      })\n      console.log(this.state.guessedCards)\n    }\n  }\n\n  randomize = () => {\n    let oldArray = this.state.comics\n    let newArray = []\n    let randomIndex\n    console.log(\"in randomize: \" + oldArray[0].name);\n    // Randomly shuffle the array\n    while (oldArray.length > 0){\n      randomIndex = Math.floor(Math.random() * oldArray.length)\n      newArray.push(oldArray[randomIndex]);\n      oldArray.splice(randomIndex, 1)\n      console.log(`The New Array is ${newArray}, the Index is ${randomIndex} and the Old Array is: ${oldArray}`)\n    }\n    // Set the new array to the reshuffled array\n    this.setState({\n      comics: newArray\n    })\n  }\n\n  // Create a ComicCard component for each item in comics state object\n  render() {\n    return (\n      <div className=\"mainDiv\">\n        <Title>Superhero Memory Game</Title>\n        { \n          (!this.state.gameOver) ? \n          <Score className=\"playing\" currentscore={this.state.currentscore} highscore={this.state.highscore}>Keep Guessing!</Score>\n          :\n          <Score className=\"gameOver\" currentscore={this.state.currentscore} highscore={this.state.highscore}>You Already Guessed That Card. Bummer! Click a card to play again.</Score>\n        }\n        <Wrapper>\n        {this.state.comics.map(comic => (\n          <ComicCard\n            id={comic.id}\n            key={comic.id}\n            name={comic.name}\n            image={comic.image}\n            handleGuess={this.handleGuess}     \n          />\n        ))}\n        </Wrapper>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}